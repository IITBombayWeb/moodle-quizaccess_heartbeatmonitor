diff --git a/client.js b/client.js
==========================================================================================================
index 743d0f3..13ba635 100644
--- a/client.js
+++ b/client.js
@@ -53,7 +53,6 @@ function client(Y, quizid, userid, username, attemptid, sessionkey, hbcfg)
 	
 	socket.on('connect', function() {
 		console.log('-- In client \'connect\' event --');
-//		console.log(obj);
 		console.log('-- After socket connected - ' + socket.id  + '. Curr. TS - ' + Math.floor(new Date().getTime()/1000));
 		socket.emit('attempt', { username:username, quizid:quizid, roomid:roomid, attemptid:attemptid });
 		
@@ -62,8 +61,6 @@ function client(Y, quizid, userid, username, attemptid, sessionkey, hbcfg)
 	socket.on('timeserver', function(data) {
 		console.log('-- In timeserver event --');
 		console.log('-- Curr. Timeserver id - ' + data.currenttimeserverid);
-//		var variableToSend = 'foo';
-//		$.post('http://localhost/moodle/mod/quiz/attempt.php', {variable: variableToSend});
 	});
 	
 	socket.on('disconnect', function() {
 	
=========================================================================================================== 	
diff --git a/createoverrides_form.php b/createoverrides_form.php
index 1331ecf..7081a41 100644
--- a/createoverrides_form.php
+++ b/createoverrides_form.php
@@ -72,35 +72,38 @@ class createoverrides_form extends moodleform {
 
         // Display live users.
         // Fetch records from database.
-        $sql1 = 'SELECT * FROM {quizaccess_hbmon_livetable} WHERE status = "Live" AND deadtime <> 0';
-        $result1    = $DB->get_records_sql($sql1);
-        $deadtime1  = null;
-        $userid1    = null;
+        $sql = 'SELECT *
+                    FROM {quizaccess_hbmon_livetable}
+                    WHERE status = "Live"
+                      AND deadtime <> 0';
+        $result     = $DB->get_records_sql($sql);
+        $deadtime   = null;
+        $userid     = null;
         $arr_users  = array();
 
-        if (!empty($result1)) {
+        if (!empty($result)) {
             // Output data of each row.
-            foreach ($result1 as $record) {
-                $roomid1        = $record->roomid;
-                $arr            = explode("_", $roomid1);
+            foreach ($result as $record) {
+                $roomid         = $record->roomid;
+                $arr            = explode("_", $roomid);
                 $attemptid      = array_splice($arr, -1)[0];
-                $quizid1        = array_splice($arr, -1)[0];
+                $quizid         = array_splice($arr, -1)[0];
                 $username       = implode("_", $arr);
                 $user           = $DB->get_record('user', array('username'=>$username));
-                $userid1        = $user->id;
-
-                if($quizid1 == $quiz->id) {
-                    $status1          = $record->status;
-                    $timetoconsider1  = $record->timetoconsider;
-                    $livetime1        = $record->livetime;
-                    $deadtime1        = $record->deadtime;
-                    $arr_users[$roomid1] = $user->firstname .  ' ' . $user->lastname;
+                $userid         = $user->id;
+
+                if($quizid == $quiz->id) {
+                    $status           = $record->status;
+                    $timetoconsider   = $record->timetoconsider;
+                    $livetime         = $record->livetime;
+                    $deadtime         = $record->deadtime;
+                    $arr_users[$roomid] = $user->firstname .  ' ' . $user->lastname;
                 }
             }
         }
 
         // Setup the form.
-        $timelimit          = $quiz->timelimit + intval($deadtime1 / 1000);
+        $timelimit          = $quiz->timelimit + intval($deadtime / 1000);
         $processoverrideurl = new moodle_url('/mod/quiz/accessrule/heartbeatmonitor/processoverride.php');
         $indexurl           = new moodle_url('/mod/quiz/accessrule/heartbeatmonitor/index.php');
 
@@ -110,17 +113,17 @@ class createoverrides_form extends moodleform {
 
         if($arr_users) {
             $attributes = null;
-            $select = $mform->addElement('select', 'users', '<b>Select users for creating user overrides </b><br>', $arr_users, $attributes);
+            $select = $mform->addElement('select', 'users', get_string('selectusers', 'quizaccess_heartbeatmonitor'), $arr_users, $attributes);
             // $mform->setDefault('users', 'No User');
             reset($arr_users);
             // $mform->getElement('users')->setSelected(array(key($arr_users)));
             $select->setMultiple(true);
-            $mform->addElement('static', 'description', '', '(Note: List contains users who are online and have a non-zero "Quiz time lost" value only.)');
+            $mform->addElement('static', 'description', '', get_string('note1', 'quizaccess_heartbeatmonitor'));
 
             // Submit button.
-            $mform->addElement('submit', 'submitbutton', 'Create override');
+            $mform->addElement('submit', 'submitbutton', get_string('createoverride', 'quizaccess_heartbeatmonitor'));
         } else {
-            $mform->addElement('static', 'description', '', '(Note: No user meets minimum conditions required for creating a user override.)');
+            $mform->addElement('static', 'description', '', get_string('note2', 'quizaccess_heartbeatmonitor'));
         }
     }
 }
\ No newline at end of file
=========================================================================================================== 	
diff --git a/index.php b/index.php
index b4101c7..e170628 100644
--- a/index.php
+++ b/index.php
@@ -60,7 +60,7 @@ require_capability('mod/quiz:manage', $context);
 
 // Display live users.
 // Fetch records from database.
-$sql = 'SELECT * FROM {quizaccess_hbmon_livetable}';  // Select data for a particular quiz and not entire table..insert quizid col in livetable for this.
+$sql = 'SELECT * FROM {quizaccess_hbmon_livetable}';  // Todo: Select data for a particular quiz and not entire table. Insert quizid col in livetable for this.
 $arr = array();
 $roomid = null;
 
@@ -260,14 +260,14 @@ if($fromform = $mform->get_data()) {
 } else {
     $startnode_form->display();
     if(empty($table->data)) {
-        echo get_string('h4open', 'quizaccess_heartbeatmonitor');
+        //echo get_string('h4open', 'quizaccess_heartbeatmonitor');
         echo html_writer::nonempty_tag('liveuserstblcaption', get_string('liveusers', 'quizaccess_heartbeatmonitor'));
-        echo get_string('h4close', 'quizaccess_heartbeatmonitor');
+        //echo get_string('h4close', 'quizaccess_heartbeatmonitor');
         echo $OUTPUT->notification(get_string('nodatafound', 'quizaccess_heartbeatmonitor'), 'info');
     } else {
-        echo get_string('h4open', 'quizaccess_heartbeatmonitor');
+        //echo get_string('h4open', 'quizaccess_heartbeatmonitor');
         echo html_writer::nonempty_tag('liveuserstblcaption', get_string('liveusers', 'quizaccess_heartbeatmonitor'));
-        echo get_string('h4close', 'quizaccess_heartbeatmonitor');
+        //echo get_string('h4close', 'quizaccess_heartbeatmonitor');
 
         // Display table.
         echo html_writer::table($table);
         
=========================================================================================================== 	         
diff --git a/lang/en/quizaccess_heartbeatmonitor.php b/lang/en/quizaccess_heartbeatmonitor.php
index 849e8ef..0745010 100644
--- a/lang/en/quizaccess_heartbeatmonitor.php
+++ b/lang/en/quizaccess_heartbeatmonitor.php
@@ -30,7 +30,7 @@ defined('MOODLE_INTERNAL') || die();
 
 $string['pluginname'] = 'Hearbeat monitor quiz access rule';
 $string['calculatetime'] = 'Calculate time';
-$string['liveusers'] = '<font color="#C7EA46">Users status';
+$string['liveusers'] = '<h4><b>Users status</b></h4>';
 $string['nodatafound'] = 'No data found.';
 $string['heading'] = '{$a} | Heartbeat monitor ';
 $string['honestycheckheader'] = 'Please read the following message';
@@ -67,5 +67,8 @@ $string['youhaveselected'] = '<br><h4>Selected users</h4><br><br>';
 $string['h4open'] = '<h4>';
 $string['h4close'] = '</h4>';
 $string['br'] = '<br>';
-
+$string['selectusers'] = '<b>Select users for creating user overrides </b><br>';
+$string['note1'] = '(Note: List contains users who are online and have a non-zero "Quiz time lost" value only.)';
+$string['createoverride'] = 'Create override';
+$string['note2'] = '(Note: No user meets minimum conditions required for creating a user override.)';
 =========================================================================================================== 	
diff --git a/rule.php b/rule.php
index d256495..67396d7 100644
--- a/rule.php
+++ b/rule.php
@@ -122,10 +122,10 @@ class quizaccess_heartbeatmonitor extends quiz_access_rule_base {
 //                                                         livetime = ' . $livetime . '
 //                                                         WHERE roomid = "' . $roomid . '"';
 
-                                    $update_sql = ' UPDATE mdl_quizaccess_hbmon_livetable SET status = "Dead",
-                                                    timetoconsider = ' . $record1->lastlivetime . ',
-                                                    livetime = ' . $livetime . '
-                                                    WHERE roomid = "' . $roomid . '"';
+                                    $update_sql = 'UPDATE mdl_quizaccess_hbmon_livetable SET status = "Dead",
+                                                       timetoconsider = ' . $record1->lastlivetime . ',
+                                                       livetime = ' . $livetime . '
+                                                       WHERE   roomid = "' . $roomid . '"';
 
                                     $update_sql_result = $DB->execute($update_sql);
                                 }
                                 
=========================================================================================================== 	                                 
diff --git a/server.js b/server.js
index 3d96f73..84ae264 100644
--- a/server.js
+++ b/server.js
@@ -33,7 +33,7 @@ var http 		= require('http').createServer(app);
 var io			= require('socket.io').listen(http);
 var bodyParser 	= require('body-parser');
 var mysql 		= require('mysql');
-var fs 			= require('fs');
+//var fs 			= require('fs');
 var obj;
 
 
@@ -43,11 +43,6 @@ var child = require('child_process').execSync('php -r \'define("CLI_SCRIPT", tru
 obj = JSON.parse(child);
 
 // DB CONN
-//console.log('-- Connecting to the db --');
-//console.log(obj.dbhost);
-//console.log(obj.dbuser);
-//console.log(obj.dbpass);
-//console.log(obj.dbname);
 var con = mysql.createConnection({
 	host 	 : obj.dbhost,
 	user 	 : obj.dbuser,
@@ -55,13 +50,6 @@ var con = mysql.createConnection({
 	database : obj.dbname
 });
 
-//var con = mysql.createConnection({
-//	host 	 : 'localhost',
-//	user 	 : 'moodle-owner',
-//	password : 'Moodle@123',
-//	database : 'moodle'
-//});
-
 app.use(bodyParser.urlencoded({ extended: true }));
 
 var port = 3000;
@@ -109,7 +97,8 @@ var record = io.sockets.on('connection', function (socket) {
 		// This is the socket of each client in the room.
 		allsocketids.push(io.sockets.server.eio.clients[clientid].id);
 	}  
-	
+	io.set('heartbeat timeout', 10);
+	io.set('heartbeat interval', 4);
 	socket.on('attempt', function(data) {
 //		console.log('-- In attempt event --');
 		
@@ -301,6 +290,7 @@ var record = io.sockets.on('connection', function (socket) {
 		});
 	});
 	
+	
 	socket.on('disconnect', function() {
 //		console.log(socket.id + ' disconnected. Curr. TS - ' + (new Date().getTime()));
 		console.log('In \'disconnect\' event. Connected sockets - ' + io.sockets.server.eio.clientsCount);
